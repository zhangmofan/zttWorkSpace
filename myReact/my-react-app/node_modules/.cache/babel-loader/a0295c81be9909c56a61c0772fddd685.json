{"ast":null,"code":"/* \n    该文件是用于创建一个为Count组件服务的reducer\n    reducer的本质就是一个函数,reducer函数会接收到两个参数\n    分别是：之前的状态(preState),动作对象(action)\n*/\n// 引入constant文件，改写type值\nimport { INCREMENT, DECREMENT } from './constant'; // 初始化状态\n\nconst initState = 0; //  定义好reducer函数后并暴露出去\n\nexport default function countReducer(preState = initState, action) {\n  console.log(preState, action); // 从action对象中取出：type、data\n\n  const {\n    type,\n    data\n  } = action; // 根据type决定如何加工数据\n\n  switch (type) {\n    // case 'increment': // 原始的\n    case INCREMENT:\n      // 改写后\n      return preState + data;\n    // 如果是加\n    // case 'decrement': // 原始的\n\n    case DECREMENT:\n      // 改写后\n      return preState - data;\n    // 如果是减\n    // reducer是个纯函数，不能处理什么异步加+1什么的\n\n    default:\n      return preState;\n  }\n}","map":{"version":3,"sources":["/home/admin/ztt01114131/zhangmofan/zttWorkSpace/myReact/my-react-app/src/views/React_redux/count_reducer.js"],"names":["INCREMENT","DECREMENT","initState","countReducer","preState","action","console","log","type","data"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,SAAT,EAAoBC,SAApB,QAAqC,YAArC,C,CAGA;;AACA,MAAMC,SAAS,GAAG,CAAlB,C,CACA;;AACA,eAAe,SAASC,YAAT,CAAsBC,QAAQ,GAACF,SAA/B,EAAyCG,MAAzC,EAAgD;AAC3DC,EAAAA,OAAO,CAACC,GAAR,CAAYH,QAAZ,EAAqBC,MAArB,EAD2D,CAE3D;;AACA,QAAM;AAACG,IAAAA,IAAD;AAAMC,IAAAA;AAAN,MAAcJ,MAApB,CAH2D,CAI3D;;AACA,UAAOG,IAAP;AACI;AACA,SAAKR,SAAL;AAAgB;AACZ,aAAOI,QAAQ,GAACK,IAAhB;AAAwB;AAC5B;;AACA,SAAKR,SAAL;AAAgB;AACZ,aAAOG,QAAQ,GAACK,IAAhB;AAAwB;AAC5B;;AACA;AACI,aAAOL,QAAP;AATR;AAWH","sourcesContent":["/* \n    该文件是用于创建一个为Count组件服务的reducer\n    reducer的本质就是一个函数,reducer函数会接收到两个参数\n    分别是：之前的状态(preState),动作对象(action)\n*/\n// 引入constant文件，改写type值\nimport { INCREMENT, DECREMENT } from './constant';\n\n\n// 初始化状态\nconst initState = 0;\n//  定义好reducer函数后并暴露出去\nexport default function countReducer(preState=initState,action){\n    console.log(preState,action);\n    // 从action对象中取出：type、data\n    const {type,data} = action;\n    // 根据type决定如何加工数据\n    switch(type){\n        // case 'increment': // 原始的\n        case INCREMENT: // 改写后\n            return preState+data;   // 如果是加\n        // case 'decrement': // 原始的\n        case DECREMENT: // 改写后\n            return preState-data;   // 如果是减\n        // reducer是个纯函数，不能处理什么异步加+1什么的\n        default:\n            return preState;  \n    }\n}\n"]},"metadata":{},"sourceType":"module"}