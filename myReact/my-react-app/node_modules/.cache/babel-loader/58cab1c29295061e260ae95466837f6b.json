{"ast":null,"code":"var _jsxFileName = \"/home/admin/ztt01114131/zhangmofan/zttWorkSpace/myReact/my-react-app/src/views/User/User.jsx\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class User extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {}; // 当使用路由跳转到某个组件时, 路由会在组件的props对象中添加路由信息, 包含以下三个字段\n    // history: 用于路由编程式导航跳转和路由监听\n    // location: 用于路由信息显示和传参\n    // match: 用于路由配置信息展示和传参\n\n    console.log(1, props);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"\\u4E2A\\u4EBA\\u4E2D\\u5FC3\\u9875:\", this.props.location.search, this.props.match.params.name, this.props.location.data && this.props.location.data.name, this.props.location.data ? this.props.location.data.name : '']\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 9\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/home/admin/ztt01114131/zhangmofan/zttWorkSpace/myReact/my-react-app/src/views/User/User.jsx"],"names":["React","User","Component","constructor","props","state","console","log","render","location","search","match","params","name","data"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,eAAe,MAAMC,IAAN,SAAmBD,KAAK,CAACE,SAAzB,CAAkC;AAC7CC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa,EAAb,CAFe,CAGf;AACA;AACA;AACA;;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,CAAZ,EAAeH,KAAf;AACH;;AACDI,EAAAA,MAAM,GAAE;AACJ,wBACA;AAAA,oDAGK,KAAKJ,KAAL,CAAWK,QAAX,CAAoBC,MAHzB,EAKK,KAAKN,KAAL,CAAWO,KAAX,CAAiBC,MAAjB,CAAwBC,IAL7B,EAOK,KAAKT,KAAL,CAAWK,QAAX,CAAoBK,IAApB,IAA4B,KAAKV,KAAL,CAAWK,QAAX,CAAoBK,IAApB,CAAyBD,IAP1D,EASK,KAAKT,KAAL,CAAWK,QAAX,CAAoBK,IAApB,GAA4B,KAAKV,KAAL,CAAWK,QAAX,CAAoBK,IAApB,CAAyBD,IAArD,GAA4D,EATjE;AAAA;AAAA;AAAA;AAAA;AAAA,YADA;AAaH;;AAxB4C","sourcesContent":["import React from \"react\"\r\n\r\nexport default class User extends React.Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { }\r\n        // 当使用路由跳转到某个组件时, 路由会在组件的props对象中添加路由信息, 包含以下三个字段\r\n        // history: 用于路由编程式导航跳转和路由监听\r\n        // location: 用于路由信息显示和传参\r\n        // match: 用于路由配置信息展示和传参\r\n        console.log(1, props)\r\n    }\r\n    render(){\r\n        return (\r\n        <div>\r\n            个人中心页: \r\n            {/* 1, url拼接传值,不会自动解析,使用location.search接收字符串 */}\r\n            {this.props.location.search}\r\n            {/* 2, 动态路由传值, 自动解析到match.params字段中 */}\r\n            {this.props.match.params.name}\r\n            {/* 3, 自定义对象传值, 为防止data为空报错,使用&&判断 */}\r\n            {this.props.location.data && this.props.location.data.name}\r\n            {/* a&&b  解释: 如果a有值就取b的值,  如果a没值,返回空  相当于三木运算 a?b:'' */}\r\n            {this.props.location.data ?  this.props.location.data.name : ''}\r\n        </div>\r\n        )\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}