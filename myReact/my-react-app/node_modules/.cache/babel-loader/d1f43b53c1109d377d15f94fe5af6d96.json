{"ast":null,"code":"/* \n    该文件专门为 Count 组件生成 action 对象\n*/\n// 引入constant文件里面的常量\nimport { INCREMENT, DECREMENT } from './constant';\nimport store from './store'; // 同步action，就是指action的值为Object类型的一般对象\n\nexport const createIncrementAction = data => {\n  return {\n    type: INCREMENT,\n    data: data\n  };\n};\nexport const createDecrementAction = data => ({\n  type: DECREMENT,\n  data: data\n}); // 异步action，就是指action的值为函数，异步action中一般会调用同步action，异步action不是必须要用的\n\nexport const createIncrementAsyncAction = (data, time) => {\n  return () => {\n    setTimeout(() => {\n      // store.dispatch({type:'increment',data:1}); // 原来的写法\n      // 使用action改写\n      store.dispatch(createIncrementAction(1));\n    }, time);\n  };\n};","map":{"version":3,"sources":["/home/admin/ztt01114131/zhangmofan/zttWorkSpace/myReact/my-react-app/src/views/React_redux/count_action.js"],"names":["INCREMENT","DECREMENT","store","createIncrementAction","data","type","createDecrementAction","createIncrementAsyncAction","time","setTimeout","dispatch"],"mappings":"AAAA;AACA;AACA;AAEA;AACA,SAASA,SAAT,EAAoBC,SAApB,QAAqC,YAArC;AAEA,OAAOC,KAAP,MAAkB,SAAlB,C,CAEA;;AACA,OAAO,MAAMC,qBAAqB,GAAIC,IAAD,IAAQ;AACzC,SAAO;AAACC,IAAAA,IAAI,EAACL,SAAN;AAAgBI,IAAAA,IAAI,EAACA;AAArB,GAAP;AACH,CAFM;AAGP,OAAO,MAAME,qBAAqB,GAAGF,IAAI,KAAG;AAACC,EAAAA,IAAI,EAACJ,SAAN;AAAgBG,EAAAA,IAAI,EAACA;AAArB,CAAH,CAAlC,C,CACP;;AACA,OAAO,MAAMG,0BAA0B,GAAE,CAACH,IAAD,EAAMI,IAAN,KAAa;AAClD,SAAO,MAAI;AACPC,IAAAA,UAAU,CAAC,MAAI;AACX;AACA;AACAP,MAAAA,KAAK,CAACQ,QAAN,CAAeP,qBAAqB,CAAC,CAAD,CAApC;AACH,KAJS,EAIRK,IAJQ,CAAV;AAKH,GAND;AAOH,CARM","sourcesContent":["/* \n    该文件专门为 Count 组件生成 action 对象\n*/\n\n// 引入constant文件里面的常量\nimport { INCREMENT, DECREMENT } from './constant';\n\nimport store from './store';\n\n// 同步action，就是指action的值为Object类型的一般对象\nexport const createIncrementAction = (data)=>{\n    return {type:INCREMENT,data:data}\n}\nexport const createDecrementAction = data=>({type:DECREMENT,data:data})\n// 异步action，就是指action的值为函数，异步action中一般会调用同步action，异步action不是必须要用的\nexport const createIncrementAsyncAction =(data,time)=>{\n    return ()=>{\n        setTimeout(()=>{\n            // store.dispatch({type:'increment',data:1}); // 原来的写法\n            // 使用action改写\n            store.dispatch(createIncrementAction(1));\n        },time)\n    }\n}\n"]},"metadata":{},"sourceType":"module"}