{"ast":null,"code":"var _jsxFileName = \"/home/admin/ztt01114131/zhangmofan/zttWorkSpace/myReact/my-react-app/src/views/Increase/increase.jsx\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport ReactDOM from 'react-dom';\nimport { createStore } from 'redux';\nimport { Provider, connect } from 'react-redux'; // React component\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Counter extends Component {\n  render() {\n    const {\n      value,\n      onIncreaseClick\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: value\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: onIncreaseClick,\n        children: \"Increase\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nCounter.propTypes = {\n  value: PropTypes.number.isRequired,\n  onIncreaseClick: PropTypes.func.isRequired\n}; // Action\n\nconst increaseAction = {\n  type: 'increase'\n}; // Reducer\n\nfunction counter(state = {\n  count: 0\n}, action) {\n  const count = state.count;\n\n  switch (action.type) {\n    case 'increase':\n      return {\n        count: count + 1\n      };\n\n    default:\n      return state;\n  }\n} // Store\n\n\nconst store = createStore(counter); // Map Redux state to component props\n\nfunction mapStateToProps(state) {\n  return {\n    value: state.count\n  };\n} // Map Redux actions to component props\n\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    onIncreaseClick: () => dispatch(increaseAction)\n  };\n} // Connected Component\n\n\nconst App = connect(mapStateToProps, mapDispatchToProps)(Counter);\nReactDOM.render( /*#__PURE__*/_jsxDEV(Provider, {\n  store: store,\n  children: /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 63,\n  columnNumber: 3\n}, this), document.getElementById('root'));","map":{"version":3,"sources":["/home/admin/ztt01114131/zhangmofan/zttWorkSpace/myReact/my-react-app/src/views/Increase/increase.jsx"],"names":["React","Component","PropTypes","ReactDOM","createStore","Provider","connect","Counter","render","value","onIncreaseClick","props","propTypes","number","isRequired","func","increaseAction","type","counter","state","count","action","store","mapStateToProps","mapDispatchToProps","dispatch","App","document","getElementById"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,SAASC,WAAT,QAA4B,OAA5B;AACA,SAASC,QAAT,EAAmBC,OAAnB,QAAkC,aAAlC,C,CAEA;;;;AACA,MAAMC,OAAN,SAAsBN,SAAtB,CAAgC;AAC9BO,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEC,MAAAA,KAAF;AAASC,MAAAA;AAAT,QAA6B,KAAKC,KAAxC;AACA,wBACE;AAAA,8BACE;AAAA,kBAAOF;AAAP;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAQ,QAAA,OAAO,EAAEC,eAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAMD;;AAT6B;;AAYhCH,OAAO,CAACK,SAAR,GAAoB;AAClBH,EAAAA,KAAK,EAAEP,SAAS,CAACW,MAAV,CAAiBC,UADN;AAElBJ,EAAAA,eAAe,EAAER,SAAS,CAACa,IAAV,CAAeD;AAFd,CAApB,C,CAKA;;AACA,MAAME,cAAc,GAAG;AAAEC,EAAAA,IAAI,EAAE;AAAR,CAAvB,C,CAEA;;AACA,SAASC,OAAT,CAAiBC,KAAK,GAAG;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAAzB,EAAuCC,MAAvC,EAA+C;AAC7C,QAAMD,KAAK,GAAGD,KAAK,CAACC,KAApB;;AACA,UAAQC,MAAM,CAACJ,IAAf;AACE,SAAK,UAAL;AACE,aAAO;AAAEG,QAAAA,KAAK,EAAEA,KAAK,GAAG;AAAjB,OAAP;;AACF;AACE,aAAOD,KAAP;AAJJ;AAMD,C,CAED;;;AACA,MAAMG,KAAK,GAAGlB,WAAW,CAACc,OAAD,CAAzB,C,CAEA;;AACA,SAASK,eAAT,CAAyBJ,KAAzB,EAAgC;AAC9B,SAAO;AACLV,IAAAA,KAAK,EAAEU,KAAK,CAACC;AADR,GAAP;AAGD,C,CAED;;;AACA,SAASI,kBAAT,CAA4BC,QAA5B,EAAsC;AACpC,SAAO;AACLf,IAAAA,eAAe,EAAE,MAAMe,QAAQ,CAACT,cAAD;AAD1B,GAAP;AAGD,C,CAED;;;AACA,MAAMU,GAAG,GAAGpB,OAAO,CACjBiB,eADiB,EAEjBC,kBAFiB,CAAP,CAGVjB,OAHU,CAAZ;AAKAJ,QAAQ,CAACK,MAAT,eACE,QAAC,QAAD;AAAU,EAAA,KAAK,EAAEc,KAAjB;AAAA,yBACE,QAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,QADF,EAIEK,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAJF","sourcesContent":["import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport ReactDOM from 'react-dom'\nimport { createStore } from 'redux'\nimport { Provider, connect } from 'react-redux'\n\n// React component\nclass Counter extends Component {\n  render() {\n    const { value, onIncreaseClick } = this.props\n    return (\n      <div>\n        <span>{value}</span>\n        <button onClick={onIncreaseClick}>Increase</button>\n      </div>\n    )\n  }\n}\n\nCounter.propTypes = {\n  value: PropTypes.number.isRequired,\n  onIncreaseClick: PropTypes.func.isRequired\n}\n\n// Action\nconst increaseAction = { type: 'increase' }\n\n// Reducer\nfunction counter(state = { count: 0 }, action) {\n  const count = state.count\n  switch (action.type) {\n    case 'increase':\n      return { count: count + 1 }\n    default:\n      return state\n  }\n}\n\n// Store\nconst store = createStore(counter)\n\n// Map Redux state to component props\nfunction mapStateToProps(state) {\n  return {\n    value: state.count\n  }\n}\n\n// Map Redux actions to component props\nfunction mapDispatchToProps(dispatch) {\n  return {\n    onIncreaseClick: () => dispatch(increaseAction)\n  }\n}\n\n// Connected Component\nconst App = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Counter)\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n)\n"]},"metadata":{},"sourceType":"module"}